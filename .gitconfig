[user]
	name = 4O4
	email = pk.pawelo@gmail.com

[includeIf "gitdir:~/Projects/FT/"]
    path = ~/Projects/FT/.gitconfig

[alias]
    co = checkout
    d = diff
    dstat = diff --stat
    ds = diff --staged
    dc = diff --cached
    dt = difftool
    dts = difftool --staged
    dtc = difftool --cached
    dtr = diff-tree -r --name-status
    c = commit --verbose
    ca = commit --amend --verbose
    amend = commit --amend --verbose
    cm = commit --verbose -m
    s = status
    ps = push
    pl = pull
    a = add
    aa = add --all
    ai = add --interactive
    ap = add --patch
    b = branch
    f = fetch
    rb = rebase
    rbi = rebase --interactive
    wipe = !git add -A && git commit -qm 'WIPE SAVEPOINT' && git reset HEAD~1 --hard
    ignored = !git ls-files -v | grep "^[[:lower:]]"
    ignore = update-index --assume-unchanged
    unignore = update-index --no-assume-unchanged

    # Fancy diff
    # https://github.com/so-fancy/diff-so-fancy
    df = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
    dfs = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --staged --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"
    dfc = "!f() { [ -z \"$GIT_PREFIX\" ] || cd \"$GIT_PREFIX\" && git diff --cached --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"

    dv = difftool --tool vscode
    dvs = difftool --staged --tool vscode
    dvc = difftool --cached --tool vscode

    dvim = difftool --tool vimdiff
    dvims = difftool --staged --tool vimdiff
    dvimc = difftool --cached --tool vimdiff

    dk = difftool --tool kompare
    dks = difftool --staged --tool kompare
    dkc = difftool --cached --tool kompare
    
    # log output:
    #
    # cf http://stackoverflow.com/questions/1057564/pretty-git-branch-graphs
    log1 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(bold white)— %an%C(reset)%C(bold yellow)%d%C(reset)' --abbrev-commit --date=relative
    log2 = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(bold white)— %an%C(reset)' --abbrev-commit
	log3 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset) %C(bold cyan)(committed: %cD)%C(reset) %C(auto)%d%C(reset)%n''          %C(white)%s%C(reset)%n''          %C(dim white)- %an <%ae> %C(reset) %C(dim white)(committer: %cn <%ce>)%C(reset)'
	log1a = !"git log1 --all"
	log2a = !"git log2 --all"
	log3a = !"git log3 --all"
    logg = !"git log1"
    logga = !"git log1a"
	dog = log --decorate --oneline --graph
	doga = log --all --decorate --oneline --graph

[core]
	autocrlf = input
	excludesfile =
    ignorecase = false

[difftool "sublimerge"]
	cmd = 'subl' -n --wait \"$REMOTE\" \"$LOCAL\" --command \"sublimerge_diff_views {\\\"left_read_only\\\": true, \\\"right_read_only\\\": false}\"

[merge]
    tool = sublimerge

[mergetool "sublimerge"]
    cmd = subl -n --wait \"$REMOTE\" \"$BASE\" \"$LOCAL\" \"$MERGED\" --command \"sublimerge_diff_views\"
    trustExitCode = false

[mergetool "vscode"]
        cmd = code --wait $MERGED

[difftool "vscode"]
    cmd = code --wait --diff $LOCAL $REMOTE

[diff]
    tool = sublimerge
    guitool = sublimerge

[difftool "sublimerge"]
    cmd = subl -n --wait \"$REMOTE\" \"$LOCAL\" --command \"sublimerge_diff_views {\\\"left_read_only\\\": true, \\\"right_read_only\\\": true}\"

[filter "lfs"]
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f

[tag]
	sort = version:refname
